buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	maven {
		name "Mobius Repo"
		url "http://mobiusstrip.eu/maven/"
	}
	maven { // the repo from which to get NEI and stuff 
		name 'CB Repo'
		url "http://chickenbones.net/maven/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
	maven {
		name = "calclavia"
		url = "http://calclavia.com/maven/"
	}
    ivy {
        url "http://www.mod-buildcraft.com/releases/BuildCraft/"
        layout 'pattern', {
            ivy '[revision]/[module]-[revision]-dev-ivy.xml'
            artifact '[revision]/[module]-[revision]-dev(.[ext])'
        }
    }
}

apply plugin: 'forge'

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = config.modVersion
group= "powercrystals.powerconverters" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PowerConverters"

dependencies {
	compile "net.industrial-craft:industrialcraft-2:${config.ic2_version}:api"
	compile "com.mod-buildcraft:buildcraft:${config.buildcraft_version}:dev"
	compile "com.gregoriust.gregtech:gregtech_${config.minecraft_version}:${config.gregtech_version}:dev"
	compile "dev.calclavia.resonantengine:resonant-engine:${config.resonantengine_version}:dev"
	compile "mcp.mobius.waila:Waila:${config.waila_version}:dev"
}

minecraft {
	version = config.minecraft_version + "-" + config.forge_version
}

version = "${config.minecraft_version}-${config.mod_version}.${System.getenv().BUILD_NUMBER}"

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'buildnumber': "${System.getenv().BUILDNUMBER}"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'

}

build.dependsOn deobfJar

artifacts {
    archives deobfJar
}

configurations {
    deployerJars
}

uploadArchives {
    dependsOn 'reobf'
    repositories {
        if(project.hasProperty("pushMaven")) {
            logger.info("Pushing to maven repo")
            mavenDeployer {
                configuration = configurations.deployerJars
                repository(url: "file://localhost/home/public_html/maven.jamesmckay.id.au/htdocs/")
                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                    packaging = 'jar'
                    description 'VeinMiner Mod'
                }
            }
        }
    }
}
